#!/bin/bash

#Disable iptables calls from bridges
echo 0 > /proc/sys/net/bridge/bridge-nf-call-iptables 

#Pull image from the dockerhub
docker pull juangonzalezcaminero/ubuntu_practica
docker tag juangonzalezcaminero/ubuntu_practica ubuntu_practica

#Clean previous containers
docker container stop ubuntu_1
docker container rm ubuntu_1
docker container stop ubuntu_2
docker container rm ubuntu_2

#Create containers (ubuntu_practica is a normal ubuntu image plus iproute2 and ping)
docker run --name ubuntu_1 -d -it --network none ubuntu_practica
docker run --name ubuntu_2 -d -it --network none ubuntu_practica

#Output changes
echo -e "\e[30;48;5;87m \e[1m "Created containers"\x1b[K\e[0m"
docker container ls

#Clean previous namespaces
ip netns delete container_1
ip netns delete container_2
ip netns delete bridge_0

#Add a namespace for each container in the netns folder by adding a symlink in that 
#folder to the network namespace of each container
mkdir -p /var/run/netns/
container_pid="$(docker inspect ubuntu_1 -f '{{.State.Pid}}')"
ln -sf /proc/$container_pid/ns/net /var/run/netns/container_1
container_pid="$(docker inspect ubuntu_2 -f '{{.State.Pid}}')"
ln -sf /proc/$container_pid/ns/net /var/run/netns/container_2

ip netns add bridge_0

#Output changes
echo -e "\e[30;48;5;87m \e[1m "Created network namespaces for each container and for the bridge"\x1b[K\e[0m"
ip netns list

#Create bridge
ip link add name br0 netns bridge_0 type bridge
ip netns exec bridge_0 ip link set br0 up

#Create veth links
#Between the containers and the bridge
ip link add veth0 netns container_1 type veth peer name br0veth0 netns bridge_0
ip link add veth0 netns container_2 type veth peer name br0veth1 netns bridge_0

#Assign the interfaces to the bridge
ip netns exec bridge_0 ip link set br0veth0 master br0
ip netns exec bridge_0 ip link set br0veth1 master br0

#Output changes
echo -e "\e[30;48;5;87m \e[1m "Created bridge and veth links with the containers and with the host"\x1b[K\e[0m"
echo -e "\e[30;48;5;209m \e[1m "Container 1:"\x1b[K\e[0m"
ip netns exec container_1 ip addr show dev veth0
echo -e "\e[30;48;5;209m \e[1m "Container 2:"\x1b[K\e[0m"
ip netns exec container_2 ip addr show dev veth0
echo -e "\e[30;48;5;209m \e[1m "Bridge:"\x1b[K\e[0m"
ip netns exec bridge_0 bridge link show master br0

#Assign an IP address to each interface
#In the containers
ip netns exec container_1 ip address add 192.168.2.1/24 dev veth0 
ip netns exec container_2 ip address add 192.168.2.2/24 dev veth0

#Activate the interfaces
ip netns exec container_1 ip link set dev veth0 up
ip netns exec container_2 ip link set dev veth0 up
ip netns exec bridge_0 ip link set dev br0veth0 up
ip netns exec bridge_0 ip link set dev br0veth1 up

#Output changes
echo -e "\e[30;48;5;87m \e[1m "Activated the interfaces and assigned addresses"\x1b[K\e[0m"
echo -e "\e[30;48;5;209m \e[1m "Container 1:"\x1b[K\e[0m"
ip netns exec container_1 ip addr show dev veth0
echo -e "\e[30;48;5;209m \e[1m "Container 2:"\x1b[K\e[0m"
ip netns exec container_2 ip addr show dev veth0
echo -e "\e[30;48;5;209m \e[1m "Bridge:"\x1b[K\e[0m"
ip netns exec bridge_0 ip addr show dev br0veth0
ip netns exec bridge_0 ip addr show dev br0veth1

#Test connectivity
echo -e "\e[30;48;5;87m \e[1m "Connectivity test"\x1b[K\e[0m"
echo -e "\e[30;48;5;209m \e[1m "Container 1 - Container 2 \(192.168.2.2\)"\x1b[K\e[0m"
docker container exec ubuntu_1 ping -c 4 192.168.2.2

echo -e "\e[30;48;5;209m \e[1m "Container 2 - Container 1 \(192.168.2.1\)"\x1b[K\e[0m"
docker container exec ubuntu_2 ping -c 4 192.168.2.1






#Colors: https://misc.flogisoft.com/bash/tip_colors_and_formatting
#Whole line: https://unix.stackexchange.com/questions/291852/how-to-\
#change-the-background-color-for-exactly-one-line (2nd answer)
#echo -e "\e[30;48;5;87m \e[1m     "$size" "$pyramid" "$iter" "$iters_per_copy"\x1b[K\e[0m"

